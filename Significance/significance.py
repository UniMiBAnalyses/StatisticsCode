import ROOT as rt
from math import *

#s = 1,10,100,1000

rt.gStyle.SetLegendTextSize(0.05)
rt.gStyle.SetLegendBorderSize(0)
#rt.gStyle.SetLegendFillColor(0)
#rt.gStyle.SetLegendFont(42)

c1 = rt.TCanvas("sigma1", "", 100, 200, 1000, 500)
c10 = rt.TCanvas("sigma10", "", 100, 200, 1000, 500)
c100 = rt.TCanvas("sigma100", "", 100, 200, 1000, 500)
c1000 = rt.TCanvas("sigma1000", "", 100, 200, 1000, 500)

c2 = rt.TCanvas("sigma2", "", 100, 200, 700, 500)

sigma1 = rt.TF1("sigma1","(1.)/sqrt(x)",0.,1000)
var1 = rt.TF1("var1","sqrt(2)*sqrt(((1.)+x)*log(1+(1.)/x)-(1.))", 0., 1000)
ratio1 = rt.TF1("ratio1","((1.)/sqrt(x)) / (sqrt(2)*sqrt(((1.)+x)*log(1+(1.)/x)-(1.)))",0.,1000)

sigma10 = rt.TF1("sigma10","(10.)/sqrt(x)",0.,1000)
var10 = rt.TF1("var10","sqrt(2)*sqrt(((10.)+x)*log(1+(10.)/x)-(10.))", 0., 1000)
ratio10 = rt.TF1("ratio10","((10.)/sqrt(x)) / (sqrt(2)*sqrt(((10.)+x)*log(1+(10.)/x)-(10.)))",0.,1000)

sigma100 = rt.TF1("sigma100","(100.)/sqrt(x)",0.,1000)
var100 = rt.TF1("var100","sqrt(2)*sqrt(((100.)+x)*log(1+(100.)/x)-(100.))", 0., 1000)
ratio100 = rt.TF1("ratio100","((100.)/sqrt(x)) / (sqrt(2)*sqrt(((100.)+x)*log(1+(100.)/x)-(100.)))",0.,1000)

sigma1000 = rt.TF1("sigma1000","(1000.)/sqrt(x)",0.,1000)
var1000 = rt.TF1("var1000","sqrt(2)*sqrt(((1000.)+x)*log(1+(1000.)/x)-(1000.))", 0., 1000)
ratio1000 = rt.TF1("ratio1000","((1000.)/sqrt(x)) / (sqrt(2)*sqrt(((1000.)+x)*log(1+(1000.)/x)-(1000.)))",0.,1000)

sigmaRatio2d = rt.TF2("sigmaRatio2d", "(y/sqrt(x)) / (sqrt(2)*sqrt((y+x)*log(1+y/x)-y))", 0.,300,0.,200) #y=sig, x=bkg


gr = rt.TGraph()
gr.SetPoint(0,0,0)
gr.SetPoint(1,0,0.0000001)
gr.SetPoint(2,1000,0)
gr.SetTitle("Z_{0}^{1} / Z_{0}^{2}")

gr1 = rt.TGraph()
gr1.SetPoint(0,0,0.9)
gr1.SetPoint(1,1000,0.9)
gr1.SetPoint(2,0.,1.6)
gr1.SetPoint(3,1000,1.6)
#gr1.SetTitle("s = 1")

gr1b = rt.TGraph()
gr1b.SetPoint(0,0,0)
gr1b.SetPoint(1,1000,0.8)
gr1b.SetPoint(2,0.,1.)
gr1b.SetPoint(3,1000,1.)
#gr1b.SetTitle("s = 1")

gr10 = rt.TGraph()
gr10.SetPoint(0,0,0.9)
gr10.SetPoint(1,1000,0.9)
gr10.SetPoint(2,0.,1.6)
gr10.SetPoint(3,1000,1.6)
#gr10.SetTitle("s = 10")

gr10b = rt.TGraph()
gr10b.SetPoint(0,0,0)
gr10b.SetPoint(1,1000,0.8)
gr10b.SetPoint(2,0.,10.)
gr10b.SetPoint(3,1000,10.)
#gr10b.SetTitle("s = 10")

gr100 = rt.TGraph()
gr100.SetPoint(0,0,0.9)
gr100.SetPoint(1,1000,0.9)
gr100.SetPoint(2,0.,1.6)
gr100.SetPoint(3,1000,1.6)
#gr100.SetTitle("s = 100")

gr100b = rt.TGraph()
gr100b.SetPoint(0,0,0)
gr100b.SetPoint(1,1000,0.8)
gr100b.SetPoint(2,0.,100.)
gr100b.SetPoint(3,1000,100.)
#gr100b.SetTitle("s = 100")

gr1000 = rt.TGraph()
gr1000.SetPoint(0,0,0.9)
gr1000.SetPoint(1,1000,0.9)
gr1000.SetPoint(2,0.,1.6)
gr1000.SetPoint(3,1000,1.6)
#gr1000.SetTitle("s = 1000")

gr1000b = rt.TGraph()
gr1000b.SetPoint(0,0,0)
gr1000b.SetPoint(1,1000,0.8)
gr1000b.SetPoint(2,0.,1000.)
gr1000b.SetPoint(3,1000,1000.)
#gr1000b.SetTitle("s = 1000")

sigma1.SetLineColor(2)
sigma1.SetLineWidth(3)
sigma10.SetLineColor(2)
sigma10.SetLineWidth(3)
sigma100.SetLineColor(2)
sigma100.SetLineWidth(3)
sigma1000.SetLineColor(2)
sigma1000.SetLineWidth(3)

var1.SetLineColor(4)
var1.SetLineWidth(3)
var10.SetLineColor(4)
var10.SetLineWidth(3)
var100.SetLineColor(4)
var100.SetLineWidth(3)
var1000.SetLineColor(4)
var1000.SetLineWidth(3)

ratio1.SetLineColor(6)
ratio1.SetLineWidth(3)
ratio10.SetLineColor(6)
ratio10.SetLineWidth(3)
ratio100.SetLineColor(6)
ratio100.SetLineWidth(3)
ratio1000.SetLineColor(6)
ratio1000.SetLineWidth(3)

l1 = rt.TLine(0,1,1000,1)
l1.SetLineStyle(7)
l10 = rt.TLine(0,1,1000,1)
l10.SetLineStyle(7)
l100 = rt.TLine(0,1,1000,1)
l100.SetLineStyle(7)
l1000 = rt.TLine(0,1,1000,1)
l1000.SetLineStyle(7)

gr1.GetXaxis().SetTitle("background events")
gr1.GetXaxis().SetTitleOffset(0.9)
gr1.GetYaxis().SetTitleOffset(0.9)
gr1.GetYaxis().SetTitle("Z_{0}^{simple} / Z_{0}^{expanded}")
gr1.GetXaxis().SetTitleSize(0.05)
gr1.GetYaxis().SetTitleSize(0.05)
gr10.GetXaxis().SetTitle("background events")
gr10.GetXaxis().SetTitleOffset(0.9)
gr10.GetYaxis().SetTitleOffset(0.9)
gr10.GetYaxis().SetTitle("Z_{0}^{simple} / Z_{0}^{expanded}")
gr10.GetYaxis().SetTitleSize(0.05)
gr10.GetXaxis().SetTitleSize(0.05)
gr100.GetXaxis().SetTitle("background events")
gr100.GetXaxis().SetTitleOffset(0.9)
gr100.GetYaxis().SetTitleOffset(0.9)
gr100.GetYaxis().SetTitle("Z_{0}^{simple} / Z_{0}^{expanded}")
gr100.GetYaxis().SetTitleSize(0.05)
gr100.GetXaxis().SetTitleSize(0.05)
gr1000.GetXaxis().SetTitle("background events")
gr1000.GetXaxis().SetTitleOffset(0.9)
gr1000.GetYaxis().SetTitleOffset(0.9)
gr1000.GetYaxis().SetTitle("Z_{0}^{simple} / Z_{0}^{expanded}")
gr1000.GetXaxis().SetTitleSize(0.05)
gr1000.GetYaxis().SetTitleSize(0.05)

leg1 = rt.TLegend(0.45,0.7,0.89,0.89)
leg1.SetHeader("signal events = 1")
leg1.AddEntry(sigma1, "Z_{0}^{simple}", "l")
leg1.AddEntry(var1, "Z_{0}^{expanded}", "l")

leg10 = rt.TLegend(0.45,0.7,0.89,0.89)
leg10.SetHeader("signal events = 10")
leg10.AddEntry(sigma1, "Z_{0}^{simple}", "l")
leg10.AddEntry(var1, "Z_{0}^{expanded}", "l")

leg100 = rt.TLegend(0.45,0.7,0.89,0.89)
leg100.SetHeader("signal events = 100")
leg100.AddEntry(sigma1, "Z_{0}^{simple}", "l")
leg100.AddEntry(var1, "Z_{0}^{expanded}", "l")

leg1000 = rt.TLegend(0.45,0.7,0.89,0.89)
leg1000.SetHeader("signal events = 1000")
leg1000.AddEntry(sigma1, "Z_{0}^{simple}", "l")
leg1000.AddEntry(var1, "Z_{0}^{expanded}", "l")

leg1b = rt.TLegend(0.45,0.7,0.89,0.89)
leg1b.SetHeader("signal events = 1")

leg10b = rt.TLegend(0.45,0.7,0.89,0.89)
leg10b.SetHeader("signal events = 10")

leg100b = rt.TLegend(0.45,0.7,0.89,0.89)
leg100b.SetHeader("signal events = 100")

leg1000b = rt.TLegend(0.45,0.7,0.89,0.89)
leg1000b.SetHeader("signal events = 1000")
       
c1.cd()
c1_1 = rt.TPad("sigma1_1", "", 0.02,0.05,0.48,0.95,17,3)
c1_2 = rt.TPad("sigma1_2", "", 0.52,0.05,0.98,0.95,17,3)
c1_1.SetFillColor(0)
c1_2.SetFillColor(0)
c1_1.Draw()
c1_2.Draw()
c1_1.cd()
c1_1.SetLogx()
gr1b.Draw("AP")
gr1b.GetXaxis().SetTitle("background events")
gr1b.GetXaxis().SetTitleOffset(0.9)
gr1b.GetXaxis().SetTitleSize(0.05)
gr1b.GetYaxis().SetTitle("Z_{0}")
gr1b.GetYaxis().SetTitleSize(0.05)
gr1b.GetYaxis().SetTitleOffset(0.7)
sigma1.Draw("L SAME")
var1.Draw("L SAME")
leg1.Draw()
c1_2.cd()
gr1.Draw("AP")
ratio1.SetMaximum(1000)
ratio1.SetMinimum(0.)
ratio1.Draw("L SAME")
l1.Draw("SAME")
leg1b.Draw()
c1.SaveAs("sigma1.png")

c10.cd()
c10_1 = rt.TPad("sigma10_1", "", 0.02,0.05,0.48,0.95,17,3)
c10_2 = rt.TPad("sigma10_2", "", 0.52,0.05,0.98,0.95,17,3)
c10_1.SetFillColor(0)
c10_2.SetFillColor(0)
c10_1.Draw()
c10_2.Draw()
c10_1.cd()
c10_1.SetLogx()
gr10b.Draw("AP")
gr10b.GetXaxis().SetTitle("background events")
gr10b.GetXaxis().SetTitleOffset(0.9)
gr10b.GetXaxis().SetTitleSize(0.05)
gr10b.GetYaxis().SetTitle("Z_{0}")
gr10b.GetYaxis().SetTitleOffset(0.7)
gr10b.GetYaxis().SetTitleSize(0.05)
sigma10.Draw("L SAME")
var10.Draw("L SAME")
leg10.Draw()
c10_2.cd()
gr10.Draw("AP")
ratio10.SetMaximum(1000)
ratio10.SetMinimum(0.)
ratio10.Draw("L SAME")
l10.Draw("SAME")
leg10b.Draw()
c10.SaveAs("sigma10.png")

c100.cd()
c100_1 = rt.TPad("sigma100_1", "", 0.02,0.05,0.48,0.95,17,3)
c100_2 = rt.TPad("sigma100_2", "", 0.52,0.05,0.98,0.95,17,3)
c100_1.SetFillColor(0)
c100_2.SetFillColor(0)
c100_1.Draw()
c100_2.Draw()
c100_1.cd()
c100_1.SetLogx()
sigma100.SetMaximum(1000)
sigma100.SetMinimum(0.)
gr100b.Draw("AP")
gr100b.GetXaxis().SetTitle("background events")
gr100b.GetXaxis().SetTitleOffset(0.9)
gr100b.GetXaxis().SetTitleSize(0.05)
gr100b.GetYaxis().SetTitle("Z_{0}")
gr100b.GetYaxis().SetTitleOffset(0.7)
gr100b.GetYaxis().SetTitleSize(0.05)
sigma100.Draw("L SAME")
var100.Draw("L SAME")
leg100.Draw()
c100_2.cd()
gr100.Draw("AP")
ratio100.SetMaximum(1000)
ratio100.SetMinimum(0.)
ratio100.Draw("L SAME")
l100.Draw("SAME")
leg100b.Draw()
c100.SaveAs("sigma100.png")

c1000.cd()
c1000_1 = rt.TPad("sigma1000_1", "", 0.02,0.05,0.48,0.95,17,3)
c1000_2 = rt.TPad("sigma1000_2", "", 0.52,0.05,0.98,0.95,17,3)
c1000_1.SetFillColor(0)
c1000_2.SetFillColor(0)
c1000_1.Draw()
c1000_2.Draw()
c1000_1.cd()
c1000_1.SetLogx()
gr1000b.Draw("AP")
gr1000b.GetXaxis().SetTitle("background events")
gr1000b.GetXaxis().SetTitleOffset(0.9)
gr1000b.GetXaxis().SetTitleSize(0.05)
gr1000b.GetYaxis().SetTitle("Z_{0}")
gr1000b.GetYaxis().SetTitleOffset(0.7)
gr1000b.GetYaxis().SetTitleSize(0.05)
sigma1000.Draw("L SAME")
var1000.Draw("L SAME")
leg1000.Draw()
c1000_2.cd()
gr1000.Draw("AP")
ratio1000.SetMaximum(1000)
ratio1000.SetMinimum(0.)
ratio1000.Draw("L SAME")
l1000.Draw("SAME")
leg1000b.Draw()
c1000.SaveAs("sigma1000.png")

#tf = rt.TF1("tf", "[0]*x", 0, 300, 1)
#c = rt.TCanvas("sigma2", "", 100, 200, 700, 500) 

c2.cd()
#tf.SetLineColor(2)
sigmaRatio2d.SetTitle("Z_{0}^{simple} / Z_{0}^{expanded}")
sigmaRatio2d.SetContour(30)
sigmaRatio2d.Draw("cont4z")
sigmaRatio2d.GetXaxis().SetTitle("background events")
sigmaRatio2d.GetYaxis().SetTitle("signal events")
sigmaRatio2d.GetXaxis().SetTitleOffset(0.9)
sigmaRatio2d.GetYaxis().SetTitleOffset(0.9)
sigmaRatio2d.GetXaxis().SetTitleSize(0.05)
sigmaRatio2d.GetYaxis().SetTitleSize(0.05)
sigmaRatio2d.GetXaxis().SetLabelSize(0.045)
sigmaRatio2d.GetYaxis().SetLabelSize(0.045)
sigmaRatio2d.GetZaxis().SetLabelSize(0.045)
sigmaRatio2d.SetMaximum(2.8)
sigmaRatio2d.SetMinimum(1)
'''
for i in range (0,4):
    if i==0:
        tf.SetParameter(0,float(33)/90)
    elif i==1:
        tf.SetParameter(0,float(20)/23)
    elif i==2:
        tf.SetParameter(0,float(100)/69)
    elif i==3:
        tf.SetParameter(0,2)
    tf.DrawCopy("same")
'''
 
c2.SaveAs("sigmaRatio2d.png")
